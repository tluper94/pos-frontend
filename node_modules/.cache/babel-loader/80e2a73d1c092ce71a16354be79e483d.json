{"ast":null,"code":"var _jsxFileName = \"/home/tluper94/Projects/posfrontend/src/components/menu/Modify.js\",\n    _s = $RefreshSig$();\n\nimport { selectionState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modify(props) {\n  _s();\n\n  const [selection, setSelection] = useRecoilState(selectionState);\n  const db = props.db;\n  let options;\n  console.log(selection);\n\n  for (const item of db) {\n    if (item.addons) {\n      console.log(item);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Select \", selection.sides, \" Sides\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Modify, \"UwL/qgK4ojSIsD946Ks3Ifv6vfQ=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Modify;\nexport default Modify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modify\");","map":{"version":3,"sources":["/home/tluper94/Projects/posfrontend/src/components/menu/Modify.js"],"names":["selectionState","useRecoilState","Modify","props","selection","setSelection","db","options","console","log","item","addons","sides"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,gBAA/B;AACA,SAASC,cAAT,QAA+B,QAA/B;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,cAAc,CAACD,cAAD,CAAhD;AACA,QAAMM,EAAE,GAAGH,KAAK,CAACG,EAAjB;AACA,MAAIC,OAAJ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;;AAEA,OAAK,MAAMM,IAAX,IAAmBJ,EAAnB,EAAuB;AAClB,QAAII,IAAI,CAACC,MAAT,EAAiB;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACJ;AACL;;AAED,sBACK;AAAA,2BACK;AAAA,4BAAaN,SAAS,CAACQ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADL;AAKJ;;GAlBQV,M;UAC8BD,c;;;KAD9BC,M;AAoBT,eAAeA,MAAf","sourcesContent":["import { selectionState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\n\nfunction Modify(props) {\n     const [selection, setSelection] = useRecoilState(selectionState);\n     const db = props.db;\n     let options;\n\n     console.log(selection);\n\n     for (const item of db) {\n          if (item.addons) {\n               console.log(item);\n          }\n     }\n\n     return (\n          <div>\n               <div>Select {selection.sides} Sides</div>\n          </div>\n     );\n}\n\nexport default Modify;\n"]},"metadata":{},"sourceType":"module"}