{"ast":null,"code":"var _jsxFileName = \"/home/tluper94/Projects/posfrontend/src/components/menu/Menu.js\",\n    _s = $RefreshSig$();\n\nimport '../../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport Modify from './Modify';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Menu(props) {\n  _s();\n\n  const database = props.database;\n  const [currentCategory, setCurrentCategory] = useState('Burgers');\n  const [isSelected, setIsSelected] = useState(false);\n  let categoryArray = [];\n  let menuArray = [];\n  let options; // Loops through menu array\n\n  for (const item of database) {\n    //pushes menu category to categoryArray\n    if (item.food && !isSelected) {\n      categoryArray.push({\n        category: item.category,\n        color: item.color\n      });\n    } else if (item.addons) {\n      for (const option of item.options) {\n        categoryArray.push({\n          catergory: option,\n          color: 'red'\n        });\n      }\n\n      options = item;\n    } //Pushes menu items that are in currentCategory to menuArray\n\n\n    if (item.category === currentCategory) {\n      menuArray.push(item);\n    }\n  }\n\n  categoryArray = [...new Map(categoryArray.map(item => [item.category, item])).values()];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_list\",\n      children: isSelected ? /*#__PURE__*/_jsxDEV(Modify, {\n        setCurrent: setCurrentCategory,\n        setSelected: setIsSelected,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 26\n      }, this) : menuArray.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n        item: item,\n        setSelected: setIsSelected,\n        setCurrent: setCurrentCategory\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this), isSelected ? console.log('category: Selected') : /*#__PURE__*/_jsxDEV(MenuCategories, {\n      categoryArry: categoryArray,\n      setCurrent: setCurrentCategory,\n      currentCategory: currentCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Menu, \"orEPLBFKHvdoRcXJr4JKIHC6PZc=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/tluper94/Projects/posfrontend/src/components/menu/Menu.js"],"names":["MenuItem","MenuCategories","Modify","useState","Menu","props","database","currentCategory","setCurrentCategory","isSelected","setIsSelected","categoryArray","menuArray","options","item","food","push","category","color","addons","option","catergory","Map","map","values","id","console","log"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,SAAD,CAAtD;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAIQ,aAAa,GAAG,EAApB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAJ,CANgB,CAQhB;;AACA,OAAK,MAAMC,IAAX,IAAmBR,QAAnB,EAA6B;AACxB;AACA,QAAIQ,IAAI,CAACC,IAAL,IAAa,CAACN,UAAlB,EAA8B;AACzBE,MAAAA,aAAa,CAACK,IAAd,CAAmB;AACdC,QAAAA,QAAQ,EAAEH,IAAI,CAACG,QADD;AAEdC,QAAAA,KAAK,EAAEJ,IAAI,CAACI;AAFE,OAAnB;AAIJ,KALD,MAKO,IAAIJ,IAAI,CAACK,MAAT,EAAiB;AACnB,WAAK,MAAMC,MAAX,IAAqBN,IAAI,CAACD,OAA1B,EAAmC;AAC9BF,QAAAA,aAAa,CAACK,IAAd,CAAmB;AACdK,UAAAA,SAAS,EAAED,MADG;AAEdF,UAAAA,KAAK,EAAE;AAFO,SAAnB;AAIJ;;AACDL,MAAAA,OAAO,GAAGC,IAAV;AACJ,KAfuB,CAgBxB;;;AACA,QAAIA,IAAI,CAACG,QAAL,KAAkBV,eAAtB,EAAuC;AAClCK,MAAAA,SAAS,CAACI,IAAV,CAAeF,IAAf;AACJ;AACL;;AAEDH,EAAAA,aAAa,GAAG,CACX,GAAG,IAAIW,GAAJ,CACEX,aAAa,CAACY,GAAd,CAAmBT,IAAD,IAAU,CAACA,IAAI,CAACG,QAAN,EAAgBH,IAAhB,CAA5B,CADF,EAEDU,MAFC,EADQ,CAAhB;AAMA,sBACK;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACMf,UAAU,gBACN,QAAC,MAAD;AACK,QAAA,UAAU,EAAED,kBADjB;AAEK,QAAA,WAAW,EAAEE,aAFlB;AAGK,QAAA,OAAO,EAAEG;AAHd;AAAA;AAAA;AAAA;AAAA,cADM,GAOND,SAAS,CAACW,GAAV,CAAeT,IAAD,iBACT,QAAC,QAAD;AACK,QAAA,IAAI,EAAEA,IADX;AAEK,QAAA,WAAW,EAAEJ,aAFlB;AAGK,QAAA,UAAU,EAAEF;AAHjB,SAIUM,IAAI,CAACW,EAJf;AAAA;AAAA;AAAA;AAAA,cADL;AARV;AAAA;AAAA;AAAA;AAAA,YADL,EAmBMhB,UAAU,GACNiB,OAAO,CAACC,GAAR,CAAY,oBAAZ,CADM,gBAGN,QAAC,cAAD;AACK,MAAA,YAAY,EAAEhB,aADnB;AAEK,MAAA,UAAU,EAAEH,kBAFjB;AAGK,MAAA,eAAe,EAAED;AAHtB;AAAA;AAAA;AAAA;AAAA,YAtBV;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AA+BJ;;GApEQH,I;;KAAAA,I;AAsET,eAAeA,IAAf","sourcesContent":["import '../../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport Modify from './Modify';\nimport { useState } from 'react';\n\nfunction Menu(props) {\n     const database = props.database;\n     const [currentCategory, setCurrentCategory] = useState('Burgers');\n     const [isSelected, setIsSelected] = useState(false);\n     let categoryArray = [];\n     let menuArray = [];\n     let options;\n\n     // Loops through menu array\n     for (const item of database) {\n          //pushes menu category to categoryArray\n          if (item.food && !isSelected) {\n               categoryArray.push({\n                    category: item.category,\n                    color: item.color,\n               });\n          } else if (item.addons) {\n               for (const option of item.options) {\n                    categoryArray.push({\n                         catergory: option,\n                         color: 'red',\n                    });\n               }\n               options = item;\n          }\n          //Pushes menu items that are in currentCategory to menuArray\n          if (item.category === currentCategory) {\n               menuArray.push(item);\n          }\n     }\n\n     categoryArray = [\n          ...new Map(\n               categoryArray.map((item) => [item.category, item])\n          ).values(),\n     ];\n\n     return (\n          <div className='menu'>\n               <div className='menu_list'>\n                    {isSelected ? (\n                         <Modify\n                              setCurrent={setCurrentCategory}\n                              setSelected={setIsSelected}\n                              options={options}\n                         ></Modify>\n                    ) : (\n                         menuArray.map((item) => (\n                              <MenuItem\n                                   item={item}\n                                   setSelected={setIsSelected}\n                                   setCurrent={setCurrentCategory}\n                                   key={item.id}\n                              ></MenuItem>\n                         ))\n                    )}\n               </div>\n               {isSelected ? (\n                    console.log('category: Selected')\n               ) : (\n                    <MenuCategories\n                         categoryArry={categoryArray}\n                         setCurrent={setCurrentCategory}\n                         currentCategory={currentCategory}\n                    ></MenuCategories>\n               )}\n          </div>\n     );\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}