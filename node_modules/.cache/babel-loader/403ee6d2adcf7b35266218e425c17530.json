{"ast":null,"code":"var _jsxFileName = \"/home/tluper94/Projects/posfrontend/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport '../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Menu(props) {\n  _s();\n\n  const database = props.database;\n  const [currentCategory, setCurrentCategory] = useState('Burgers');\n  let categoryArray = [];\n  let menuArray = [];\n\n  const removeDuplicates = prop => arr => Array.from(arr.reduce((acc, item) => (item && item[prop] && acc.set(item[prop], item), acc), new Map()).values()); // Loops through menu array\n\n\n  for (const item of database) {\n    //pushes menu category to categoryArray\n    categoryArray.push({\n      category: item.category,\n      color: item.color\n    }); //Pushes menu items that are in currentCategory to menuArray\n\n    if (item.category === currentCategory) {\n      menuArray.push(item);\n    } // Removes duplicate category items from array\n\n\n    categoryArray = (prop, arr) => Array.from(arr); // categoryArray = [\n    //      ...new Map(\n    //           categoryArray.map((item) => [item.category, item])\n    //      ).values(),\n    // ];\n    // categoryArray = categoryArray.filter((item, i, array) => {\n    //      return array.indexOf(item) === i;\n    // });\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_list\",\n      children: menuArray.map(item => MenuItem(item))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this), MenuCategories({\n      categoryArry: categoryArray,\n      setCurrent: setCurrentCategory\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Menu, \"ijXL3YC52y42JhNbRWAFTFvJ72g=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/tluper94/Projects/posfrontend/src/components/Menu.js"],"names":["MenuItem","MenuCategories","useState","Menu","props","database","currentCategory","setCurrentCategory","categoryArray","menuArray","removeDuplicates","prop","arr","Array","from","reduce","acc","item","set","Map","values","push","category","color","map","categoryArry","setCurrent"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,SAAD,CAAtD;AACA,MAAIM,aAAa,GAAG,EAApB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAMC,gBAAgB,GAAIC,IAAD,IAAWC,GAAD,IAC9BC,KAAK,CAACC,IAAN,CACKF,GAAG,CACGG,MADN,CAEU,CAACC,GAAD,EAAMC,IAAN,MACKA,IAAI,IAAIA,IAAI,CAACN,IAAD,CAAZ,IAAsBK,GAAG,CAACE,GAAJ,CAAQD,IAAI,CAACN,IAAD,CAAZ,EAAoBM,IAApB,CAAtB,EACAD,GAFL,CAFV,EAMU,IAAIG,GAAJ,EANV,EAQMC,MARN,EADL,CADL,CANgB,CAmBhB;;;AACA,OAAK,MAAMH,IAAX,IAAmBZ,QAAnB,EAA6B;AACxB;AACAG,IAAAA,aAAa,CAACa,IAAd,CAAmB;AAAEC,MAAAA,QAAQ,EAAEL,IAAI,CAACK,QAAjB;AAA2BC,MAAAA,KAAK,EAAEN,IAAI,CAACM;AAAvC,KAAnB,EAFwB,CAGxB;;AACA,QAAIN,IAAI,CAACK,QAAL,KAAkBhB,eAAtB,EAAuC;AAClCG,MAAAA,SAAS,CAACY,IAAV,CAAeJ,IAAf;AACJ,KANuB,CAOxB;;;AAEAT,IAAAA,aAAa,GAAG,CAACG,IAAD,EAAOC,GAAP,KAAeC,KAAK,CAACC,IAAN,CAAWF,GAAX,CAA/B,CATwB,CAWxB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACJ;;AAED,sBACK;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACMH,SAAS,CAACe,GAAV,CAAeP,IAAD,IAAUjB,QAAQ,CAACiB,IAAD,CAAhC;AADN;AAAA;AAAA;AAAA;AAAA,YADL,EAIMhB,cAAc,CAAC;AACXwB,MAAAA,YAAY,EAAEjB,aADH;AAEXkB,MAAAA,UAAU,EAAEnB;AAFD,KAAD,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAWJ;;GArDQJ,I;;KAAAA,I;AAuDT,eAAeA,IAAf","sourcesContent":["import '../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport { useState } from 'react';\n\nfunction Menu(props) {\n     const database = props.database;\n     const [currentCategory, setCurrentCategory] = useState('Burgers');\n     let categoryArray = [];\n     let menuArray = [];\n\n     const removeDuplicates = (prop) => (arr) =>\n          Array.from(\n               arr\n                    .reduce(\n                         (acc, item) => (\n                              item && item[prop] && acc.set(item[prop], item),\n                              acc\n                         ),\n                         new Map()\n                    )\n                    .values()\n          );\n\n     // Loops through menu array\n     for (const item of database) {\n          //pushes menu category to categoryArray\n          categoryArray.push({ category: item.category, color: item.color });\n          //Pushes menu items that are in currentCategory to menuArray\n          if (item.category === currentCategory) {\n               menuArray.push(item);\n          }\n          // Removes duplicate category items from array\n\n          categoryArray = (prop, arr) => Array.from(arr);\n\n          // categoryArray = [\n          //      ...new Map(\n          //           categoryArray.map((item) => [item.category, item])\n          //      ).values(),\n          // ];\n\n          // categoryArray = categoryArray.filter((item, i, array) => {\n          //      return array.indexOf(item) === i;\n          // });\n     }\n\n     return (\n          <div className='menu'>\n               <div className='menu_list'>\n                    {menuArray.map((item) => MenuItem(item))}\n               </div>\n               {MenuCategories({\n                    categoryArry: categoryArray,\n                    setCurrent: setCurrentCategory,\n               })}\n          </div>\n     );\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}