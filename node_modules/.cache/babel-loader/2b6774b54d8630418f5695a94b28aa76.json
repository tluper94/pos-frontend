{"ast":null,"code":"var _jsxFileName = \"/home/trevor/projects/pos-frontend/src/components/menu/MenuItem.js\",\n    _s = $RefreshSig$();\n\nimport { useRecoilState } from 'recoil';\nimport { menuState } from '../state/Atoms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MenuItem(props) {\n  _s();\n\n  const [menu, setMenuState] = useRecoilState(menuState);\n  const item = props.item;\n\n  function checkSides() {\n    if (item.options.length > 0 && !menu.isSelected) {\n      console.log(item.options);\n      let required = [];\n\n      for (const option of item.options) {\n        if (option.num) {\n          required.push(...required, Array(option.num).fill(option.category).values());\n        }\n      }\n\n      console.log(required);\n      setMenuState({ ...menu,\n        isSelected: true,\n        selection: item,\n        currentCategory: item.options[0].category,\n        pending: { ...menu.pending,\n          main: item\n        }\n      });\n    } else {\n      setMenuState({ ...menu,\n        selection: item,\n        pending: { ...menu.pending,\n          main: item\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_item\",\n    onClick: () => {\n      checkSides();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuItemText\",\n      children: item.food\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 11\n  }, this);\n}\n\n_s(MenuItem, \"2D0T/8me5HEOOx8SkvJL235x9iQ=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = MenuItem;\nexport default MenuItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItem\");","map":{"version":3,"sources":["/home/trevor/projects/pos-frontend/src/components/menu/MenuItem.js"],"names":["useRecoilState","menuState","MenuItem","props","menu","setMenuState","item","checkSides","options","length","isSelected","console","log","required","option","num","push","Array","fill","category","values","selection","currentCategory","pending","main","food"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,QAA/B;AACA,SAASC,SAAT,QAA0B,gBAA1B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBL,cAAc,CAACC,SAAD,CAA3C;AACA,QAAMK,IAAI,GAAGH,KAAK,CAACG,IAAnB;;AACA,WAASC,UAAT,GAAsB;AACjB,QAAID,IAAI,CAACE,OAAL,CAAaC,MAAb,GAAsB,CAAtB,IAA2B,CAACL,IAAI,CAACM,UAArC,EAAiD;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,OAAjB;AACA,UAAIK,QAAQ,GAAG,EAAf;;AACA,WAAK,MAAMC,MAAX,IAAqBR,IAAI,CAACE,OAA1B,EAAmC;AAC9B,YAAIM,MAAM,CAACC,GAAX,EAAgB;AACXF,UAAAA,QAAQ,CAACG,IAAT,CACK,GAAGH,QADR,EAEKI,KAAK,CAACH,MAAM,CAACC,GAAR,CAAL,CAAkBG,IAAlB,CAAuBJ,MAAM,CAACK,QAA9B,EAAwCC,MAAxC,EAFL;AAIJ;AACL;;AACDT,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACAR,MAAAA,YAAY,CAAC,EACR,GAAGD,IADK;AAERM,QAAAA,UAAU,EAAE,IAFJ;AAGRW,QAAAA,SAAS,EAAEf,IAHH;AAIRgB,QAAAA,eAAe,EAAEhB,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBW,QAJzB;AAKRI,QAAAA,OAAO,EAAE,EAAE,GAAGnB,IAAI,CAACmB,OAAV;AAAmBC,UAAAA,IAAI,EAAElB;AAAzB;AALD,OAAD,CAAZ;AAOJ,KAnBD,MAmBO;AACFD,MAAAA,YAAY,CAAC,EACR,GAAGD,IADK;AAERiB,QAAAA,SAAS,EAAEf,IAFH;AAGRiB,QAAAA,OAAO,EAAE,EAAE,GAAGnB,IAAI,CAACmB,OAAV;AAAmBC,UAAAA,IAAI,EAAElB;AAAzB;AAHD,OAAD,CAAZ;AAKJ;AACL;;AACD,sBACK;AACK,IAAA,SAAS,EAAC,WADf;AAEK,IAAA,OAAO,EAAE,MAAM;AACVC,MAAAA,UAAU;AACd,KAJN;AAAA,2BAMK;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BD,IAAI,CAACmB;AAApC;AAAA;AAAA;AAAA;AAAA;AANL;AAAA;AAAA;AAAA;AAAA,UADL;AAUJ;;GAzCQvB,Q;UACyBF,c;;;KADzBE,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import { useRecoilState } from 'recoil';\nimport { menuState } from '../state/Atoms';\n\nfunction MenuItem(props) {\n     const [menu, setMenuState] = useRecoilState(menuState);\n     const item = props.item;\n     function checkSides() {\n          if (item.options.length > 0 && !menu.isSelected) {\n               console.log(item.options);\n               let required = [];\n               for (const option of item.options) {\n                    if (option.num) {\n                         required.push(\n                              ...required,\n                              Array(option.num).fill(option.category).values()\n                         );\n                    }\n               }\n               console.log(required);\n               setMenuState({\n                    ...menu,\n                    isSelected: true,\n                    selection: item,\n                    currentCategory: item.options[0].category,\n                    pending: { ...menu.pending, main: item },\n               });\n          } else {\n               setMenuState({\n                    ...menu,\n                    selection: item,\n                    pending: { ...menu.pending, main: item },\n               });\n          }\n     }\n     return (\n          <div\n               className='menu_item'\n               onClick={() => {\n                    checkSides();\n               }}\n          >\n               <div className='menuItemText'>{item.food}</div>\n          </div>\n     );\n}\n\nexport default MenuItem;\n"]},"metadata":{},"sourceType":"module"}