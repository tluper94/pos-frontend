{"ast":null,"code":"var _jsxFileName = \"/home/tluper94/Projects/posfrontend/src/components/menu/Menu.js\",\n    _s = $RefreshSig$();\n\nimport '../../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Menu(props) {\n  _s();\n\n  const database = props.database;\n  const [currentCategory, setCurrentCategory] = useState('Burgers');\n  const [isSelected, setIsSelected] = useState(false);\n  let categoryArray = [];\n  let menuArray = [];\n  const [selection, setSelection] = useRecoilState(selectionState); // Loops through menu array\n\n  for (const item of database) {\n    //pushes menu category to categoryArray\n    categoryArray.push({\n      category: item.category,\n      color: item.color\n    }); //Pushes menu items that are in currentCategory to menuArray\n\n    if (item.category === currentCategory) {\n      menuArray.push(item);\n    }\n  }\n\n  categoryArray = [...new Map(categoryArray.map(item => [item.category, item])).values()];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_list\",\n      children: isSelected ? console.log('Selected') : menuArray.map(item => MenuItem({\n        item: item,\n        setSelected: setIsSelected\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this), MenuCategories({\n      categoryArry: categoryArray,\n      setCurrent: setCurrentCategory\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Menu, \"7KejwfYeFtGx3nvEcH0JVnaf3EM=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/tluper94/Projects/posfrontend/src/components/menu/Menu.js"],"names":["MenuItem","MenuCategories","useState","useRecoilState","Menu","props","database","currentCategory","setCurrentCategory","isSelected","setIsSelected","categoryArray","menuArray","selection","setSelection","selectionState","item","push","category","color","Map","map","values","console","log","setSelected","categoryArry","setCurrent"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,QAA/B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,SAAD,CAAtD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAIS,aAAa,GAAG,EAApB;AACA,MAAIC,SAAS,GAAG,EAAhB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,cAAc,CAACY,cAAD,CAAhD,CAPgB,CAShB;;AACA,OAAK,MAAMC,IAAX,IAAmBV,QAAnB,EAA6B;AACxB;AACAK,IAAAA,aAAa,CAACM,IAAd,CAAmB;AAAEC,MAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAjB;AAA2BC,MAAAA,KAAK,EAAEH,IAAI,CAACG;AAAvC,KAAnB,EAFwB,CAGxB;;AACA,QAAIH,IAAI,CAACE,QAAL,KAAkBX,eAAtB,EAAuC;AAClCK,MAAAA,SAAS,CAACK,IAAV,CAAeD,IAAf;AACJ;AACL;;AAEDL,EAAAA,aAAa,GAAG,CACX,GAAG,IAAIS,GAAJ,CACET,aAAa,CAACU,GAAd,CAAmBL,IAAD,IAAU,CAACA,IAAI,CAACE,QAAN,EAAgBF,IAAhB,CAA5B,CADF,EAEDM,MAFC,EADQ,CAAhB;AAMA,sBACK;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACMb,UAAU,GACJc,OAAO,CAACC,GAAR,CAAY,UAAZ,CADI,GAEJZ,SAAS,CAACS,GAAV,CAAeL,IAAD,IACThB,QAAQ,CAAC;AACJgB,QAAAA,IAAI,EAAEA,IADF;AAEJS,QAAAA,WAAW,EAAEf;AAFT,OAAD,CADb;AAHZ;AAAA;AAAA;AAAA;AAAA,YADL,EAWMT,cAAc,CAAC;AACXyB,MAAAA,YAAY,EAAEf,aADH;AAEXgB,MAAAA,UAAU,EAAEnB;AAFD,KAAD,CAXpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAkBJ;;GA3CQJ,I;UAO8BD,c;;;KAP9BC,I;AA6CT,eAAeA,IAAf","sourcesContent":["import '../../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport { useState } from 'react';\nimport { useRecoilState } from 'recoil';\n\nfunction Menu(props) {\n     const database = props.database;\n     const [currentCategory, setCurrentCategory] = useState('Burgers');\n     const [isSelected, setIsSelected] = useState(false);\n     let categoryArray = [];\n     let menuArray = [];\n\n     const [selection, setSelection] = useRecoilState(selectionState);\n\n     // Loops through menu array\n     for (const item of database) {\n          //pushes menu category to categoryArray\n          categoryArray.push({ category: item.category, color: item.color });\n          //Pushes menu items that are in currentCategory to menuArray\n          if (item.category === currentCategory) {\n               menuArray.push(item);\n          }\n     }\n\n     categoryArray = [\n          ...new Map(\n               categoryArray.map((item) => [item.category, item])\n          ).values(),\n     ];\n\n     return (\n          <div className='menu'>\n               <div className='menu_list'>\n                    {isSelected\n                         ? console.log('Selected')\n                         : menuArray.map((item) =>\n                                MenuItem({\n                                     item: item,\n                                     setSelected: setIsSelected,\n                                })\n                           )}\n               </div>\n               {MenuCategories({\n                    categoryArry: categoryArray,\n                    setCurrent: setCurrentCategory,\n               })}\n          </div>\n     );\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}