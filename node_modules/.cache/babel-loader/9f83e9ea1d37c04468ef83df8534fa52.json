{"ast":null,"code":"var _jsxFileName = \"/home/tluper94/Projects/posfrontend/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport '../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Menu(props) {\n  _s();\n\n  const database = props.database;\n  const [currentCategory, setCurrentCategory] = useState('Burgers');\n  let categoryArray = [];\n  let menuArray = []; // Loops through menu array\n\n  for (const item of database) {\n    //pushes menu category to categoryArray\n    categoryArray.push({\n      category: item.category,\n      color: item.color\n    }); //Pushes menu items that are in currentCategory to menuArray\n\n    if (item.category === currentCategory) {\n      menuArray.push(item);\n    } //Removes duplicate category items from array\n    // categoryArray = [\n    //      ...new Map(\n    //           categoryArray.map((item) => [item.category, item])\n    //      ).values(),\n    // ];\n\n\n    categoryArray = categoryArray.filter((item, i, array) => {\n      return array.indexOf(item.category) === i;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_list\",\n      children: menuArray.map(item => MenuItem(item))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this), MenuCategories({\n      categoryArry: categoryArray,\n      setCurrent: setCurrentCategory\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Menu, \"ijXL3YC52y42JhNbRWAFTFvJ72g=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/tluper94/Projects/posfrontend/src/components/Menu.js"],"names":["MenuItem","MenuCategories","useState","Menu","props","database","currentCategory","setCurrentCategory","categoryArray","menuArray","item","push","category","color","filter","i","array","indexOf","map","categoryArry","setCurrent"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,SAAD,CAAtD;AACA,MAAIM,aAAa,GAAG,EAApB;AACA,MAAIC,SAAS,GAAG,EAAhB,CAJgB,CAMhB;;AACA,OAAK,MAAMC,IAAX,IAAmBL,QAAnB,EAA6B;AACxB;AACAG,IAAAA,aAAa,CAACG,IAAd,CAAmB;AAAEC,MAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAjB;AAA2BC,MAAAA,KAAK,EAAEH,IAAI,CAACG;AAAvC,KAAnB,EAFwB,CAGxB;;AACA,QAAIH,IAAI,CAACE,QAAL,KAAkBN,eAAtB,EAAuC;AAClCG,MAAAA,SAAS,CAACE,IAAV,CAAeD,IAAf;AACJ,KANuB,CAOxB;AACA;AACA;AACA;AACA;AACA;;;AAEAF,IAAAA,aAAa,GAAGA,aAAa,CAACM,MAAd,CAAqB,CAACJ,IAAD,EAAOK,CAAP,EAAUC,KAAV,KAAoB;AACpD,aAAOA,KAAK,CAACC,OAAN,CAAcP,IAAI,CAACE,QAAnB,MAAiCG,CAAxC;AACJ,KAFe,CAAhB;AAGJ;;AAED,sBACK;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACMN,SAAS,CAACS,GAAV,CAAeR,IAAD,IAAUV,QAAQ,CAACU,IAAD,CAAhC;AADN;AAAA;AAAA;AAAA;AAAA,YADL,EAIMT,cAAc,CAAC;AACXkB,MAAAA,YAAY,EAAEX,aADH;AAEXY,MAAAA,UAAU,EAAEb;AAFD,KAAD,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAWJ;;GArCQJ,I;;KAAAA,I;AAuCT,eAAeA,IAAf","sourcesContent":["import '../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport { useState } from 'react';\n\nfunction Menu(props) {\n     const database = props.database;\n     const [currentCategory, setCurrentCategory] = useState('Burgers');\n     let categoryArray = [];\n     let menuArray = [];\n\n     // Loops through menu array\n     for (const item of database) {\n          //pushes menu category to categoryArray\n          categoryArray.push({ category: item.category, color: item.color });\n          //Pushes menu items that are in currentCategory to menuArray\n          if (item.category === currentCategory) {\n               menuArray.push(item);\n          }\n          //Removes duplicate category items from array\n          // categoryArray = [\n          //      ...new Map(\n          //           categoryArray.map((item) => [item.category, item])\n          //      ).values(),\n          // ];\n\n          categoryArray = categoryArray.filter((item, i, array) => {\n               return array.indexOf(item.category) === i;\n          });\n     }\n\n     return (\n          <div className='menu'>\n               <div className='menu_list'>\n                    {menuArray.map((item) => MenuItem(item))}\n               </div>\n               {MenuCategories({\n                    categoryArry: categoryArray,\n                    setCurrent: setCurrentCategory,\n               })}\n          </div>\n     );\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}