{"ast":null,"code":"var _jsxFileName = \"/home/trevor/projects/pos-frontend/src/components/menu/Modify.js\",\n    _s = $RefreshSig$();\n\nimport { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modify(_ref) {\n  _s();\n\n  let {\n    categories,\n    db\n  } = _ref;\n  const [menu, setMenuState] = useRecoilState(menuState);\n  const optionsArray = [];\n\n  for (const item of db) {\n    if (item.menu === 'modify') {\n      for (const addon of item.addons) {\n        if (addon.category === menu.currentCategory) {\n          optionsArray.push(addon);\n        }\n      }\n    }\n  }\n\n  const checkRequired = item => {\n    const currentItems = [];\n\n    if (menu.pending.modify.length < 1) {\n      setMenuState({ ...menu,\n        pending: { ...menu.pending,\n          modify: [...menu.pending.modify, item]\n        }\n      });\n    } else {\n      for (const current of menu.pending.modify) {\n        currentItems.push(current.category);\n      }\n\n      console.log(currentItems);\n\n      for (const option of menu.selection.options) {\n        if (option.num) {\n          console.log(option.num);\n          const num = currentItems.filter(x => x === option.category).length;\n\n          if (num === option.num) {\n            console.log('True');\n          }\n        }\n      }\n    }\n  }; // checkRequired();\n  // const addItem = (item) => {\n  //      setMenuState({\n  //           ...menu,\n  //           pending: {\n  //                ...menu.pending,\n  //                modify: [...menu.pending.modify, item],\n  //           },\n  //      });\n  // };\n\n\n  return optionsArray.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => checkRequired(item),\n    className: \"menu_item\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuItemText\",\n      children: item.food\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 11\n  }, this));\n}\n\n_s(Modify, \"2D0T/8me5HEOOx8SkvJL235x9iQ=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Modify;\nexport default Modify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modify\");","map":{"version":3,"sources":["/home/trevor/projects/pos-frontend/src/components/menu/Modify.js"],"names":["menuState","useRecoilState","Modify","categories","db","menu","setMenuState","optionsArray","item","addon","addons","category","currentCategory","push","checkRequired","currentItems","pending","modify","length","current","console","log","option","selection","options","num","filter","x","map","i","food"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,QAA+B,QAA/B;;;AAEA,SAASC,MAAT,OAAoC;AAAA;;AAAA,MAApB;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAoB;AAC/B,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBL,cAAc,CAACD,SAAD,CAA3C;AACA,QAAMO,YAAY,GAAG,EAArB;;AAEA,OAAK,MAAMC,IAAX,IAAmBJ,EAAnB,EAAuB;AAClB,QAAII,IAAI,CAACH,IAAL,KAAc,QAAlB,EAA4B;AACvB,WAAK,MAAMI,KAAX,IAAoBD,IAAI,CAACE,MAAzB,EAAiC;AAC5B,YAAID,KAAK,CAACE,QAAN,KAAmBN,IAAI,CAACO,eAA5B,EAA6C;AACxCL,UAAAA,YAAY,CAACM,IAAb,CAAkBJ,KAAlB;AACJ;AACL;AACL;AACL;;AAED,QAAMK,aAAa,GAAIN,IAAD,IAAU;AAC3B,UAAMO,YAAY,GAAG,EAArB;;AACA,QAAIV,IAAI,CAACW,OAAL,CAAaC,MAAb,CAAoBC,MAApB,GAA6B,CAAjC,EAAoC;AAC/BZ,MAAAA,YAAY,CAAC,EACR,GAAGD,IADK;AAERW,QAAAA,OAAO,EAAE,EACJ,GAAGX,IAAI,CAACW,OADJ;AAEJC,UAAAA,MAAM,EAAE,CAAC,GAAGZ,IAAI,CAACW,OAAL,CAAaC,MAAjB,EAAyBT,IAAzB;AAFJ;AAFD,OAAD,CAAZ;AAOJ,KARD,MAQO;AACF,WAAK,MAAMW,OAAX,IAAsBd,IAAI,CAACW,OAAL,CAAaC,MAAnC,EAA2C;AACtCF,QAAAA,YAAY,CAACF,IAAb,CAAkBM,OAAO,CAACR,QAA1B;AACJ;;AACDS,MAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;;AACA,WAAK,MAAMO,MAAX,IAAqBjB,IAAI,CAACkB,SAAL,CAAeC,OAApC,EAA6C;AACxC,YAAIF,MAAM,CAACG,GAAX,EAAgB;AACXL,UAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACG,GAAnB;AACA,gBAAMA,GAAG,GAAGV,YAAY,CAACW,MAAb,CACNC,CAAD,IAAOA,CAAC,KAAKL,MAAM,CAACX,QADb,EAEVO,MAFF;;AAGA,cAAIO,GAAG,KAAKH,MAAM,CAACG,GAAnB,EAAwB;AACnBL,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACJ;AACL;AACL;AACL;AACL,GA3BD,CAd+B,CA2C/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAOd,YAAY,CAACqB,GAAb,CAAiB,CAACpB,IAAD,EAAOqB,CAAP,kBACnB;AACK,IAAA,OAAO,EAAE,MAAMf,aAAa,CAACN,IAAD,CADjC;AAGK,IAAA,SAAS,EAAC,WAHf;AAAA,2BAKK;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BA,IAAI,CAACsB;AAApC;AAAA;AAAA;AAAA;AAAA;AALL,KAEUD,CAFV;AAAA;AAAA;AAAA;AAAA,UADE,CAAP;AASJ;;GAhEQ3B,M;UACyBD,c;;;KADzBC,M;AAkET,eAAeA,MAAf","sourcesContent":["import { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\n\nfunction Modify({ categories, db }) {\n     const [menu, setMenuState] = useRecoilState(menuState);\n     const optionsArray = [];\n\n     for (const item of db) {\n          if (item.menu === 'modify') {\n               for (const addon of item.addons) {\n                    if (addon.category === menu.currentCategory) {\n                         optionsArray.push(addon);\n                    }\n               }\n          }\n     }\n\n     const checkRequired = (item) => {\n          const currentItems = [];\n          if (menu.pending.modify.length < 1) {\n               setMenuState({\n                    ...menu,\n                    pending: {\n                         ...menu.pending,\n                         modify: [...menu.pending.modify, item],\n                    },\n               });\n          } else {\n               for (const current of menu.pending.modify) {\n                    currentItems.push(current.category);\n               }\n               console.log(currentItems);\n               for (const option of menu.selection.options) {\n                    if (option.num) {\n                         console.log(option.num);\n                         const num = currentItems.filter(\n                              (x) => x === option.category\n                         ).length;\n                         if (num === option.num) {\n                              console.log('True');\n                         }\n                    }\n               }\n          }\n     };\n\n     // checkRequired();\n\n     // const addItem = (item) => {\n     //      setMenuState({\n     //           ...menu,\n     //           pending: {\n     //                ...menu.pending,\n     //                modify: [...menu.pending.modify, item],\n     //           },\n     //      });\n     // };\n\n     return optionsArray.map((item, i) => (\n          <div\n               onClick={() => checkRequired(item)}\n               key={i}\n               className='menu_item'\n          >\n               <div className='menuItemText'>{item.food}</div>\n          </div>\n     ));\n}\n\nexport default Modify;\n"]},"metadata":{},"sourceType":"module"}