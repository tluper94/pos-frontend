{"ast":null,"code":"var _jsxFileName = \"/home/trevor/projects/pos-frontend/src/components/menu/Modify.js\",\n    _s = $RefreshSig$();\n\nimport { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modify(_ref) {\n  _s();\n\n  let {\n    categories,\n    db\n  } = _ref;\n  const [menu, setMenuState] = useRecoilState(menuState);\n  const optionsArray = [];\n  const {\n    currentCategory,\n    currentItems,\n    selection,\n    pending,\n    active,\n    requiredItems\n  } = menu;\n  console.log(requiredItems);\n\n  for (const item of db) {\n    if (item.menu === 'modify') {\n      for (const addon of item.addons) {\n        if (addon.category === currentCategory) {\n          optionsArray.push(addon);\n        }\n      }\n    }\n  }\n\n  const checkRequired = item => {\n    console.log(currentItems);\n\n    for (const option of selection.options) {\n      const num = currentItems.filter(x => x === option.category).length;\n\n      if (currentCategory === option.category && option.num === num) {\n        return true;\n      }\n    }\n  };\n\n  const validate = (a, b) => {\n    if (a.length !== b.length) return false;\n    const uniqueValues = new Set([...a, ...b]);\n\n    for (const v of uniqueValues) {\n      const aCount = a.filter(e => e === v).length;\n      const bCount = b.filter(e => e === v).length;\n      if (aCount !== bCount) return false;\n    }\n\n    setMenuState({ ...menu,\n      isSelected: false,\n      selection: {},\n      currentCategory: 'Burgers',\n      currentItems: [],\n      requiredItems: []\n    });\n  };\n\n  const displayModify = () => {\n    return optionsArray.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => addItem(item),\n      className: \"menu_item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuItemText\",\n        children: item.food\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this));\n  };\n\n  validate(currentItems, requiredItems);\n\n  const addItem = item => {\n    if (checkRequired()) {} else {\n      setMenuState({ ...menu,\n        pending: { ...menu.pending,\n          modify: [...menu.pending.modify, item]\n        },\n        currentItems: [...currentItems, item.category]\n      });\n    }\n  };\n\n  return displayModify();\n}\n\n_s(Modify, \"2D0T/8me5HEOOx8SkvJL235x9iQ=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Modify;\nexport default Modify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modify\");","map":{"version":3,"sources":["/home/trevor/projects/pos-frontend/src/components/menu/Modify.js"],"names":["menuState","useRecoilState","Modify","categories","db","menu","setMenuState","optionsArray","currentCategory","currentItems","selection","pending","active","requiredItems","console","log","item","addon","addons","category","push","checkRequired","option","options","num","filter","x","length","validate","a","b","uniqueValues","Set","v","aCount","e","bCount","isSelected","displayModify","map","i","addItem","food","modify"],"mappings":"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","sourcesContent":["import { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\n\nfunction Modify({ categories, db }) {\n     const [menu, setMenuState] = useRecoilState(menuState);\n     const optionsArray = [];\n\n     const {\n          currentCategory,\n          currentItems,\n          selection,\n          pending,\n          active,\n          requiredItems,\n     } = menu;\n\n     console.log(requiredItems);\n\n     for (const item of db) {\n          if (item.menu === 'modify') {\n               for (const addon of item.addons) {\n                    if (addon.category === currentCategory) {\n                         optionsArray.push(addon);\n                    }\n               }\n          }\n     }\n\n     const checkRequired = (item) => {\n          console.log(currentItems);\n          for (const option of selection.options) {\n               const num = currentItems.filter(\n                    (x) => x === option.category\n               ).length;\n               if (currentCategory === option.category && option.num === num) {\n                    return true;\n               }\n          }\n     };\n\n     const validate = (a, b) => {\n          if (a.length !== b.length) return false;\n          const uniqueValues = new Set([...a, ...b]);\n          for (const v of uniqueValues) {\n               const aCount = a.filter((e) => e === v).length;\n               const bCount = b.filter((e) => e === v).length;\n               if (aCount !== bCount) return false;\n          }\n          setMenuState({\n               ...menu,\n               isSelected: false,\n               selection: {},\n               currentCategory: 'Burgers',\n               currentItems: [],\n               requiredItems: [],\n          });\n     };\n\n     const displayModify = () => {\n          return optionsArray.map((item, i) => (\n               <div onClick={() => addItem(item)} key={i} className='menu_item'>\n                    <div className='menuItemText'>{item.food}</div>\n               </div>\n          ));\n     };\n\n     validate(currentItems, requiredItems);\n\n     const addItem = (item) => {\n          if (checkRequired()) {\n          } else {\n               setMenuState({\n                    ...menu,\n                    pending: {\n                         ...menu.pending,\n                         modify: [...menu.pending.modify, item],\n                    },\n                    currentItems: [...currentItems, item.category],\n               });\n          }\n     };\n\n     return displayModify();\n}\n\nexport default Modify;\n"]},"metadata":{},"sourceType":"module"}