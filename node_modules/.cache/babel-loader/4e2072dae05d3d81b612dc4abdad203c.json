{"ast":null,"code":"var _jsxFileName = \"/home/trevor/projects/pos-frontend/src/components/menu/Modify.js\",\n    _s = $RefreshSig$();\n\nimport { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modify(_ref) {\n  _s();\n\n  let {\n    categories,\n    db\n  } = _ref;\n  const [menu, setMenuState] = useRecoilState(menuState);\n  const optionsArray = [];\n  const {\n    currentCategory,\n    currentItems,\n    selection,\n    pending,\n    active\n  } = menu;\n\n  for (const item of db) {\n    if (item.menu === 'modify') {\n      for (const addon of item.addons) {\n        if (addon.category === currentCategory) {\n          optionsArray.push(addon);\n        }\n      }\n    }\n  }\n\n  const checkRequired = item => {\n    console.log(currentItems);\n\n    for (const option of selection.options) {\n      if (option.num) {\n        console.log(option);\n        const num = currentItems.filter(x => x === option.category).length;\n\n        if (num === option.num) {\n          return true;\n        }\n      }\n    }\n  };\n\n  checkRequired();\n  console.log(menu);\n\n  const addItem = item => {\n    if (checkRequired()) {\n      console.log('true');\n    } else {\n      setMenuState({ ...menu,\n        pending: { ...menu.pending,\n          modify: [...menu.pending.modify, item]\n        },\n        currentItems: [...currentItems, item.category]\n      });\n    }\n  };\n\n  return optionsArray.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => addItem(item),\n    className: \"menu_item\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuItemText\",\n      children: item.food\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }, this));\n}\n\n_s(Modify, \"2D0T/8me5HEOOx8SkvJL235x9iQ=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Modify;\nexport default Modify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modify\");","map":{"version":3,"sources":["/home/trevor/projects/pos-frontend/src/components/menu/Modify.js"],"names":["menuState","useRecoilState","Modify","categories","db","menu","setMenuState","optionsArray","currentCategory","currentItems","selection","pending","active","item","addon","addons","category","push","checkRequired","console","log","option","options","num","filter","x","length","addItem","modify","map","i","food"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,QAA+B,QAA/B;;;AAEA,SAASC,MAAT,OAAoC;AAAA;;AAAA,MAApB;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAoB;AAC/B,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBL,cAAc,CAACD,SAAD,CAA3C;AACA,QAAMO,YAAY,GAAG,EAArB;AAEA,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,YAAnB;AAAiCC,IAAAA,SAAjC;AAA4CC,IAAAA,OAA5C;AAAqDC,IAAAA;AAArD,MAAgEP,IAAtE;;AAEA,OAAK,MAAMQ,IAAX,IAAmBT,EAAnB,EAAuB;AAClB,QAAIS,IAAI,CAACR,IAAL,KAAc,QAAlB,EAA4B;AACvB,WAAK,MAAMS,KAAX,IAAoBD,IAAI,CAACE,MAAzB,EAAiC;AAC5B,YAAID,KAAK,CAACE,QAAN,KAAmBR,eAAvB,EAAwC;AACnCD,UAAAA,YAAY,CAACU,IAAb,CAAkBH,KAAlB;AACJ;AACL;AACL;AACL;;AAED,QAAMI,aAAa,GAAIL,IAAD,IAAU;AAC3BM,IAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;;AACA,SAAK,MAAMY,MAAX,IAAqBX,SAAS,CAACY,OAA/B,EAAwC;AACnC,UAAID,MAAM,CAACE,GAAX,EAAgB;AACXJ,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,cAAME,GAAG,GAAGd,YAAY,CAACe,MAAb,CACNC,CAAD,IAAOA,CAAC,KAAKJ,MAAM,CAACL,QADb,EAEVU,MAFF;;AAGA,YAAIH,GAAG,KAAKF,MAAM,CAACE,GAAnB,EAAwB;AACnB,iBAAO,IAAP;AACJ;AACL;AACL;AACL,GAbD;;AAeAL,EAAAA,aAAa;AACbC,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;;AAEA,QAAMsB,OAAO,GAAId,IAAD,IAAU;AACrB,QAAIK,aAAa,EAAjB,EAAqB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACJ,KAFD,MAEO;AACFd,MAAAA,YAAY,CAAC,EACR,GAAGD,IADK;AAERM,QAAAA,OAAO,EAAE,EACJ,GAAGN,IAAI,CAACM,OADJ;AAEJiB,UAAAA,MAAM,EAAE,CAAC,GAAGvB,IAAI,CAACM,OAAL,CAAaiB,MAAjB,EAAyBf,IAAzB;AAFJ,SAFD;AAMRJ,QAAAA,YAAY,EAAE,CAAC,GAAGA,YAAJ,EAAkBI,IAAI,CAACG,QAAvB;AANN,OAAD,CAAZ;AAQJ;AACL,GAbD;;AAeA,SAAOT,YAAY,CAACsB,GAAb,CAAiB,CAAChB,IAAD,EAAOiB,CAAP,kBACnB;AAAK,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACd,IAAD,CAA3B;AAA2C,IAAA,SAAS,EAAC,WAArD;AAAA,2BACK;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BA,IAAI,CAACkB;AAApC;AAAA;AAAA;AAAA;AAAA;AADL,KAAwCD,CAAxC;AAAA;AAAA;AAAA;AAAA,UADE,CAAP;AAKJ;;GAtDQ5B,M;UACyBD,c;;;KADzBC,M;AAwDT,eAAeA,MAAf","sourcesContent":["import { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\n\nfunction Modify({ categories, db }) {\n     const [menu, setMenuState] = useRecoilState(menuState);\n     const optionsArray = [];\n\n     const { currentCategory, currentItems, selection, pending, active } = menu;\n\n     for (const item of db) {\n          if (item.menu === 'modify') {\n               for (const addon of item.addons) {\n                    if (addon.category === currentCategory) {\n                         optionsArray.push(addon);\n                    }\n               }\n          }\n     }\n\n     const checkRequired = (item) => {\n          console.log(currentItems);\n          for (const option of selection.options) {\n               if (option.num) {\n                    console.log(option);\n                    const num = currentItems.filter(\n                         (x) => x === option.category\n                    ).length;\n                    if (num === option.num) {\n                         return true;\n                    }\n               }\n          }\n     };\n\n     checkRequired();\n     console.log(menu);\n\n     const addItem = (item) => {\n          if (checkRequired()) {\n               console.log('true');\n          } else {\n               setMenuState({\n                    ...menu,\n                    pending: {\n                         ...menu.pending,\n                         modify: [...menu.pending.modify, item],\n                    },\n                    currentItems: [...currentItems, item.category],\n               });\n          }\n     };\n\n     return optionsArray.map((item, i) => (\n          <div onClick={() => addItem(item)} key={i} className='menu_item'>\n               <div className='menuItemText'>{item.food}</div>\n          </div>\n     ));\n}\n\nexport default Modify;\n"]},"metadata":{},"sourceType":"module"}