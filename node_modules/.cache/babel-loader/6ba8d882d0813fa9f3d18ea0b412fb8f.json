{"ast":null,"code":"var _jsxFileName = \"/home/trevor/projects/pos-frontend/src/components/menu/Modify.js\",\n    _s = $RefreshSig$();\n\nimport { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\nimport ModifyItem from './ModifyItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modify(_ref) {\n  _s();\n\n  let {\n    categories,\n    db\n  } = _ref;\n  const [menu, setMenuState] = useRecoilState(menuState);\n  const optionsArray = [];\n\n  for (const item of db) {\n    if (item.menu === 'modify') {\n      for (const addon of item.addons) {\n        if (addon.category === menu.currentCategory) {\n          optionsArray.push(addon);\n        }\n      }\n    }\n  }\n\n  for (const option of menu.selection.options) {\n    if (option.num) {\n      console.log(option);\n    }\n  }\n\n  const displayItems = () => {\n    optionsArray.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => addItem(item),\n      className: \"menu_item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuItemText\",\n        children: item.food\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this));\n  };\n\n  const addItem = item => {\n    // for (const option of menu.selection.options) {\n    //      if (option.num) {\n    //           console.log(option);\n    //      }\n    // }\n    setMenuState({ ...menu,\n      pending: [...menu.pending, item]\n    });\n  };\n\n  return displayItems();\n}\n\n_s(Modify, \"2D0T/8me5HEOOx8SkvJL235x9iQ=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Modify;\nexport default Modify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modify\");","map":{"version":3,"sources":["/home/trevor/projects/pos-frontend/src/components/menu/Modify.js"],"names":["menuState","useRecoilState","ModifyItem","Modify","categories","db","menu","setMenuState","optionsArray","item","addon","addons","category","currentCategory","push","option","selection","options","num","console","log","displayItems","map","i","addItem","food","pending"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,MAAT,OAAoC;AAAA;;AAAA,MAApB;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAoB;AAC/B,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBN,cAAc,CAACD,SAAD,CAA3C;AACA,QAAMQ,YAAY,GAAG,EAArB;;AAEA,OAAK,MAAMC,IAAX,IAAmBJ,EAAnB,EAAuB;AAClB,QAAII,IAAI,CAACH,IAAL,KAAc,QAAlB,EAA4B;AACvB,WAAK,MAAMI,KAAX,IAAoBD,IAAI,CAACE,MAAzB,EAAiC;AAC5B,YAAID,KAAK,CAACE,QAAN,KAAmBN,IAAI,CAACO,eAA5B,EAA6C;AACxCL,UAAAA,YAAY,CAACM,IAAb,CAAkBJ,KAAlB;AACJ;AACL;AACL;AACL;;AAED,OAAK,MAAMK,MAAX,IAAqBT,IAAI,CAACU,SAAL,CAAeC,OAApC,EAA6C;AACxC,QAAIF,MAAM,CAACG,GAAX,EAAgB;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACJ;AACL;;AAED,QAAMM,YAAY,GAAG,MAAM;AACtBb,IAAAA,YAAY,CAACc,GAAb,CAAiB,CAACb,IAAD,EAAOc,CAAP,kBACZ;AAAK,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACf,IAAD,CAA3B;AAA2C,MAAA,SAAS,EAAC,WAArD;AAAA,6BACK;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBAA+BA,IAAI,CAACgB;AAApC;AAAA;AAAA;AAAA;AAAA;AADL,OAAwCF,CAAxC;AAAA;AAAA;AAAA;AAAA,YADL;AAKJ,GAND;;AAQA,QAAMC,OAAO,GAAIf,IAAD,IAAU;AACrB;AACA;AACA;AACA;AACA;AACAF,IAAAA,YAAY,CAAC,EAAE,GAAGD,IAAL;AAAWoB,MAAAA,OAAO,EAAE,CAAC,GAAGpB,IAAI,CAACoB,OAAT,EAAkBjB,IAAlB;AAApB,KAAD,CAAZ;AACJ,GAPD;;AASA,SAAOY,YAAY,EAAnB;AACJ;;GAtCQlB,M;UACyBF,c;;;KADzBE,M;AAwCT,eAAeA,MAAf","sourcesContent":["import { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\nimport ModifyItem from './ModifyItem';\n\nfunction Modify({ categories, db }) {\n     const [menu, setMenuState] = useRecoilState(menuState);\n     const optionsArray = [];\n\n     for (const item of db) {\n          if (item.menu === 'modify') {\n               for (const addon of item.addons) {\n                    if (addon.category === menu.currentCategory) {\n                         optionsArray.push(addon);\n                    }\n               }\n          }\n     }\n\n     for (const option of menu.selection.options) {\n          if (option.num) {\n               console.log(option);\n          }\n     }\n\n     const displayItems = () => {\n          optionsArray.map((item, i) => (\n               <div onClick={() => addItem(item)} key={i} className='menu_item'>\n                    <div className='menuItemText'>{item.food}</div>\n               </div>\n          ));\n     };\n\n     const addItem = (item) => {\n          // for (const option of menu.selection.options) {\n          //      if (option.num) {\n          //           console.log(option);\n          //      }\n          // }\n          setMenuState({ ...menu, pending: [...menu.pending, item] });\n     };\n\n     return displayItems();\n}\n\nexport default Modify;\n"]},"metadata":{},"sourceType":"module"}