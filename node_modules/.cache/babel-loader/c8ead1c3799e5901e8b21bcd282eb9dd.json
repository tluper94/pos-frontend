{"ast":null,"code":"var _jsxFileName = \"/home/trevor/projects/pos-frontend/src/components/menu/Menu.js\",\n    _s = $RefreshSig$();\n\nimport '../../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport Modify from './Modify';\nimport { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Menu(props) {\n  _s();\n\n  const database = props.database;\n  const [menu, setMenuState] = useRecoilState(menuState);\n  const isSelected = menu.isSelected;\n  const currentCategory = menu.currentCategory;\n  const currentSelection = menu.selection;\n  let categoryArray = [];\n  let menuArray = [];\n  let options = [];\n  console.log(categoryArray); // Loops through menu array\n\n  for (const item of database) {\n    //pushes menu category to categoryArray\n    if (item.menu === 'main' && !isSelected) {\n      categoryArray.push({\n        category: item.category,\n        color: item.color\n      });\n\n      if (item.category === currentCategory) {\n        menuArray.push(item);\n      }\n    }\n  }\n\n  if (currentSelection.options && currentSelection.options.length > 0) {\n    for (const option of currentSelection.options) {\n      categoryArray.push({\n        category: option.category,\n        color: 'blue'\n      });\n    }\n  }\n\n  categoryArray = [...new Map(categoryArray.map(item => [item.category, item])).values()];\n\n  function displayMenu() {\n    if (!isSelected) {\n      return menuArray.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(Modify, {\n        options: options,\n        db: database,\n        categories: categoryArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_list\",\n      children: displayMenu()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(MenuCategories, {\n      categoryArry: categoryArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Menu, \"2D0T/8me5HEOOx8SkvJL235x9iQ=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/trevor/projects/pos-frontend/src/components/menu/Menu.js"],"names":["MenuItem","MenuCategories","Modify","menuState","useRecoilState","Menu","props","database","menu","setMenuState","isSelected","currentCategory","currentSelection","selection","categoryArray","menuArray","options","console","log","item","push","category","color","length","option","Map","map","values","displayMenu","id"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,QAA+B,QAA/B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBL,cAAc,CAACD,SAAD,CAA3C;AACA,QAAMO,UAAU,GAAGF,IAAI,CAACE,UAAxB;AACA,QAAMC,eAAe,GAAGH,IAAI,CAACG,eAA7B;AACA,QAAMC,gBAAgB,GAAGJ,IAAI,CAACK,SAA9B;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAO,GAAG,EAAd;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ,EAVgB,CAYhB;;AACA,OAAK,MAAMK,IAAX,IAAmBZ,QAAnB,EAA6B;AACxB;AACA,QAAIY,IAAI,CAACX,IAAL,KAAc,MAAd,IAAwB,CAACE,UAA7B,EAAyC;AACpCI,MAAAA,aAAa,CAACM,IAAd,CAAmB;AACdC,QAAAA,QAAQ,EAAEF,IAAI,CAACE,QADD;AAEdC,QAAAA,KAAK,EAAEH,IAAI,CAACG;AAFE,OAAnB;;AAIA,UAAIH,IAAI,CAACE,QAAL,KAAkBV,eAAtB,EAAuC;AAClCI,QAAAA,SAAS,CAACK,IAAV,CAAeD,IAAf;AACJ;AACL;AACL;;AAED,MAAIP,gBAAgB,CAACI,OAAjB,IAA4BJ,gBAAgB,CAACI,OAAjB,CAAyBO,MAAzB,GAAkC,CAAlE,EAAqE;AAChE,SAAK,MAAMC,MAAX,IAAqBZ,gBAAgB,CAACI,OAAtC,EAA+C;AAC1CF,MAAAA,aAAa,CAACM,IAAd,CAAmB;AACdC,QAAAA,QAAQ,EAAEG,MAAM,CAACH,QADH;AAEdC,QAAAA,KAAK,EAAE;AAFO,OAAnB;AAIJ;AACL;;AAEDR,EAAAA,aAAa,GAAG,CACX,GAAG,IAAIW,GAAJ,CACEX,aAAa,CAACY,GAAd,CAAmBP,IAAD,IAAU,CAACA,IAAI,CAACE,QAAN,EAAgBF,IAAhB,CAA5B,CADF,EAEDQ,MAFC,EADQ,CAAhB;;AAMA,WAASC,WAAT,GAAuB;AAClB,QAAI,CAAClB,UAAL,EAAiB;AACZ,aAAOK,SAAS,CAACW,GAAV,CAAeP,IAAD,iBAChB,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACU,EAAhC;AAAA;AAAA;AAAA;AAAA,cADE,CAAP;AAGJ,KAJD,MAIO;AACF,0BACK,QAAC,MAAD;AACK,QAAA,OAAO,EAAEb,OADd;AAEK,QAAA,EAAE,EAAET,QAFT;AAGK,QAAA,UAAU,EAAEO;AAHjB;AAAA;AAAA;AAAA;AAAA,cADL;AAOJ;AACL;;AAED,sBACK;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAA4Bc,WAAW;AAAvC;AAAA;AAAA;AAAA;AAAA,YADL,eAEM,QAAC,cAAD;AAAgB,MAAA,YAAY,EAAEd;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAMJ;;GA/DQT,I;UAEyBD,c;;;KAFzBC,I;AAiET,eAAeA,IAAf","sourcesContent":["import '../../CSS/Menu.css';\nimport MenuItem from './MenuItem';\nimport MenuCategories from './MenuCategories';\nimport Modify from './Modify';\nimport { menuState } from '../state/Atoms';\nimport { useRecoilState } from 'recoil';\n\nfunction Menu(props) {\n     const database = props.database;\n     const [menu, setMenuState] = useRecoilState(menuState);\n     const isSelected = menu.isSelected;\n     const currentCategory = menu.currentCategory;\n     const currentSelection = menu.selection;\n     let categoryArray = [];\n     let menuArray = [];\n     let options = [];\n\n     console.log(categoryArray);\n\n     // Loops through menu array\n     for (const item of database) {\n          //pushes menu category to categoryArray\n          if (item.menu === 'main' && !isSelected) {\n               categoryArray.push({\n                    category: item.category,\n                    color: item.color,\n               });\n               if (item.category === currentCategory) {\n                    menuArray.push(item);\n               }\n          }\n     }\n\n     if (currentSelection.options && currentSelection.options.length > 0) {\n          for (const option of currentSelection.options) {\n               categoryArray.push({\n                    category: option.category,\n                    color: 'blue',\n               });\n          }\n     }\n\n     categoryArray = [\n          ...new Map(\n               categoryArray.map((item) => [item.category, item])\n          ).values(),\n     ];\n\n     function displayMenu() {\n          if (!isSelected) {\n               return menuArray.map((item) => (\n                    <MenuItem item={item} key={item.id}></MenuItem>\n               ));\n          } else {\n               return (\n                    <Modify\n                         options={options}\n                         db={database}\n                         categories={categoryArray}\n                    ></Modify>\n               );\n          }\n     }\n\n     return (\n          <div className='menu'>\n               <div className='menu_list'>{displayMenu()}</div>\n               {<MenuCategories categoryArry={categoryArray}></MenuCategories>}\n          </div>\n     );\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}